#!/usr/bin/env ruby
# frozen_string_literal: true

require 'telegram/bot'

require './lib/app_configurator'
require './lib/chat_join_request'
require './lib/message_responder'

require'pry' 
config = AppConfigurator.new
config.configure

token = config.token
logger = config.logger

logger.debug 'Starting telegram bot'

Telegram::Bot::Client.run(token) do |bot|
  bot.listen do |event|
    case event
    when Telegram::Bot::Types::ChatMemberUpdated
      options = { bot:, chat: event.chat, logger:, user: event.from }

      logger.debug "@#{event.from.username} invited us to #{event.chat.title}"
      ChatJoinRequest.new(options).respond
    when Telegram::Bot::Types::Message
      options = { bot:, event: }
      location = event.chat.title || 'private'

      logger.debug "@#{event.from.username}[#{location}]: #{event.text}"
      MessageResponder.new(options).respond
    else
      raise ArgumentError("Unsupported event: #{event}")
    end
  end
end
